name: Build and Push Image

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to use for all Wazuh Dashboard components'
        required: true
        default: 'main'
        type: string
      tag:
        description: 'Docker image tag'
        required: true
        default: 'latest'
        type: string
      node_version:
        description: 'Node.js version'
        required: false
        default: '20.18.3'
        type: string
      opensearch_version:
        description: 'OpenSearch Dashboard version'
        required: false
        default: '3.2.0.0'
        type: string

jobs:
  build-amd64:
    runs-on: ubuntu-24.04
    environment: workflow
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Quay.io
        uses: docker/login-action@v3
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_PASSWORD }}

      - name: Build AMD64 image
        run: |
          chmod +x ./dev-tools/build-dev-image/build-multiarch.sh
          cd ./dev-tools/build-dev-image
          ./build-multiarch.sh \
            --node-version "${{ inputs.node_version }}" \
            --opensearch-version "${{ inputs.opensearch_version }}" \
            --wazuh-branch "${{ inputs.branch }}" \
            --security-branch "${{ inputs.branch }}" \
            --reporting-branch "${{ inputs.branch }}" \
            --plugins-branch "${{ inputs.branch }}" \
            --security-analytics-branch "${{ inputs.branch }}" \
            --tag "${{ inputs.tag }}-amd64" \
            --platform "linux/amd64" \
            --push

  build-arm64:
    runs-on: ubuntu-24.04-arm
    environment: workflow
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Quay.io
        uses: docker/login-action@v3
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_PASSWORD }}

      - name: Build ARM64 image
        run: |
          chmod +x ./dev-tools/build-dev-image/build-multiarch.sh
          cd ./dev-tools/build-dev-image
          ./build-multiarch.sh \
            --node-version "${{ inputs.node_version }}" \
            --opensearch-version "${{ inputs.opensearch_version }}" \
            --wazuh-branch "${{ inputs.branch }}" \
            --security-branch "${{ inputs.branch }}" \
            --reporting-branch "${{ inputs.branch }}" \
            --plugins-branch "${{ inputs.branch }}" \
            --security-analytics-branch "${{ inputs.branch }}" \
            --tag "${{ inputs.tag }}-arm64" \
            --platform "linux/arm64" \
            --push

  create-manifest:
    runs-on: ubuntu-24.04
    needs: [build-amd64, build-arm64]
    environment: workflow
    
    steps:
      - name: Login to Quay.io
        uses: docker/login-action@v3
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_PASSWORD }}

      - name: Create and push multi-arch manifest
        run: |
          # First, inspect what we're dealing with
          docker manifest inspect quay.io/wazuh/osd-dev:${{ inputs.tag }}-amd64 || true
          docker manifest inspect quay.io/wazuh/osd-dev:${{ inputs.tag }}-arm64 || true
          
          # If the individual arch images are manifest lists, we need to get their digests
          # Create manifest list using digests instead of tags
          AMD64_DIGEST=$(docker manifest inspect quay.io/wazuh/osd-dev:${{ inputs.tag }}-amd64 | jq -r '.manifests[] | select(.platform.architecture=="amd64") | .digest')
          ARM64_DIGEST=$(docker manifest inspect quay.io/wazuh/osd-dev:${{ inputs.tag }}-arm64 | jq -r '.manifests[] | select(.platform.architecture=="arm64") | .digest')
          
          # Create manifest list using digests
          docker manifest create quay.io/wazuh/osd-dev:${{ inputs.tag }} \
            quay.io/wazuh/osd-dev@${AMD64_DIGEST} \
            quay.io/wazuh/osd-dev@${ARM64_DIGEST}

          # Push manifest
          docker manifest push quay.io/wazuh/osd-dev:${{ inputs.tag }}

          echo "âœ… Multi-arch manifest created and pushed!"
          echo "ðŸ“¦ Image available at: quay.io/wazuh/osd-dev:${{ inputs.tag }}"
